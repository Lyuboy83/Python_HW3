# import time

# start = time.perf_counter()
# a = [i for i in range(15000000)]
# if 130000 in a:
#     print("нашел в списке")
# end = time.perf_counter()
# print(end - start)


# start = time.perf_counter()
# dct = {i:1 for i in range(15000000)}
# if 130000 in dct:
#     print("нашел в словаре")
# end = time.perf_counter()
# print(end - start)

#list,set,dct - изменяемые
# import time
#
# a = [i for i in range(15000000)]
# start = time.perf_counter()
# if 130000 in a:
#     print("нашел в списке")
# end = time.perf_counter()
# print(end-start)
#
# dct = {i:1 for i in range(15000000)}
# start = time.perf_counter()
# if 130000 in dct:
#     print("нашел в словаре")
# end = time.perf_counter()
# print(end-start)

##

# Задача №17. Решение в группах
# Дан список чисел. Определите, сколько в нем встречается различных чисел.

# Input: [1, 1, 2, 0, -1, 3, 4, 4]

# Output: 6

# Примечание: Пользователь может вводить значения списка или список задан изначально.

# a = [1, 1, 2, 0, -1, 3, 4, 4]
# print(len(set(a)))

##

# Задача №19. Решение в группах
# Дана последовательность из N целых чисел и число K. Необходимо сдвинуть всю последовательность (сдвиг - циклический) на K элементов вправо,  K – положительное число.

# Input:   [1, 2, 3, 4, 5] k = 3

# Output:  [3, 4, 5, 1, 2]

# Примечание: Пользователь может вводить значения списка или список задан изначально.

# Вариант 1

# k = int(input("Введите число k"))
# a =[1, 2, 3, 4, 5]
# k = 3
# k = k%len(a)
# if k<0:
#     k = abs(k)
#     print(*a[k:],end =' ')
#     print(*a[0:k])
#     exit()
 
# if k>=0:
#     k = abs(k)
#     print(*a[-k:],end =' ')
#     print(*a[0:-k])
    
#     Вариант 2

# k = int(input("Введите число для сдвига: "))
# n = int(input("Введите последовательность чисел: "))
# list_1 = [i for i in range(n)]
# print(list_1)
# for i in range(k):
#     list_1.insert(0, list_1.pop())
# print(list_1)

##

# Задача №21. Решение в группах
# Напишите программу для печати всех уникальных значений в словаре. 

# Input:  [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005"}, {"VII": "S005"}, {"V":"S009"}, {"VIII":"S007"}] 

# Output: {'S005', 'S002', 'S007', 'S001', 'S009'}


# Примечание: Список словарей задан изначально. Пользователь его не вводит


# d = [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"},
#         {"VI": "S005"}, {"VII": "S005"}, {"V": "S009"}, {"VIII": "S007"}]
# print(d)
# new_set = set()
# for i in d:
#     for k in i.values():
#         new_set.add(k)
# print(new_set)
# print(set((list(k.values())[0]) for k in d))
# print(*i.values())

# Вариант 2

# my_list = [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005"},
#            {"VII": " S005 "}, {" V ": " S009 "}, {" VIII ": " S007 "}]
# final_set = set()
# for i in my_list:
#     for j in i:
#         final_set.add(i[j].strip())
# print(final_set)

##


# Задача №23. Решение в группах
# Дан массив, состоящий из целых чисел. Напишите программу, которая подсчитает количество элементов массива, больших предыдущего (элемента с предыдущим номером) 


# Input: [0, -1, 5, 2, 3]


# Output: 2 

# Пояснение: (-1 < 5, 2 < 3)


# Примечание: Пользователь может вводить значения списка или список задан изначально.


# count = 0
# list_1 = [0, -1, 5, 2, 3]
# for i in range(len(list_1)-1):
#     if list_1[i] < list_1[i+1]:
#         count += 1
# print("Количество элементов массива, больших предыдущего: ", count)


##

# .Создайте список из случайных чисел. Найдите второй максимум.

# a = [1, 2, 3] # Первый максимум == 3, второй == 2


ist_1 = [0, -1, 5, 2, 3]
print

##

# 1.Создайте список из случайных чисел. Найдите номер его последнего локального максимума 
# (локальный максимум — это элемент, который больше любого из своих соседей).

