# За день машина проезжает n километров. Сколько дней нужно, чтобы проехать маршрут длиной m километров? При решении этой задачи нельзя пользоваться условной инструкцией if и циклами.
# Input:
""" n = 700
m = 750
Output:
2

import math

n = float(input('Введте число сколько км проезжает машина за день'))
m = float(input('Введте растояние для расчета количества дней'))

print()


print(math.ceil(m/n))


# В некоторой школе решили набрать три новых математических класса и оборудовать кабинеты для них новыми партами. За каждой партой может сидеть два учащихся. Известно количество учащихся в каждом из трех классов. Выведите наименьшее число парт, которое нужно приобрести для них.
Input: 20 21 22(ввод чисел НЕ в одну строку)
Output: 32

# n = float(input('Введте количество учеников А '))
m = float(input('Введте количество учеников Б '))
x = float(input('Введте количество учеников В ')) """

# y = math.ceil(n/2) + math.ceil(m/2) + math.ceil(x/2)

# print(y)


# Вагоны в электричке пронумерованы натуральными числами, начиная с 1 (при этом иногда вагоны нумеруются от «головы» поезда, а иногда – с «хвоста»; это зависит от того, в какую сторону едет электричка). 
# В каждом вагоне написан его номер. Витя сел в i-й вагон от головы поезда и обнаружил, что его вагон имеет номер j. Он хочет определить, сколько всего вагонов в электричке. 
# Напишите программу, которая будет это делать или сообщать, что без дополнительной информации это сделать невозможно.
# Input: 3 4(ввод на разных строках)
# Output: 6

""" i = int(input('Введте количество вагонов i '))
    j = int(input('Введте количество вагонов j '))
    if (i==j):
        print("Нумерация с головы поезда и необходимо обладать доп информацией, чтоб определить все вагоны поезда")
    else:
        (print(j-1+i))
 """

# Дано натуральное число. Требуется определить, является ли год с данным номером високосным. 
# Если год является високосным, то выведите YES, иначе выведите NO. Напомним, что в соответствии с григорианским календарем, год является високосным, если его номер кратен 4, но не кратен 100, а также если он кратен 400.
# Input: 2016
# Output: YES

""" y = int(input('Введте год '))

if (y%400==0)or((y%4==0)and(y%100!=0)):
    print("YES")
else:
    print("NO") """


# 13.Шахматный король ходит по горизонтали, вертикали и диагонали, но только на 1 клетку. 
# Даны две различные клетки шахматной доски, определите, может ли король попасть с первой клетки на вторую одним ходом. 
# Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер строки сначала для первой клетки, потом для второй клетки. 
# Программа должна вывести YES, если из первой клетки ходом короля можно попасть во вторую или NO в противном случае. 
# В случае, если хотя бы одно из введенных чисел не лежит в диапазоне от 1 до 8, выведите строку "Ошибка!".  

# def checkInput(king_v, king_g, next_turn_v, next_turn_g):
#     if(king_v in range(1,9) and
#        king_g in range(1,9) and
#        next_turn_v in range(1,9) and 
#        next_turn_g in range(1,9)):
#         return True
#     else: return False 

# def cheas(king_v, king_g, next_turn_v, next_turn_g):
    
#     if(checkInput(king_v, king_g, next_turn_v, next_turn_g)):
#         if(abs(next_turn_v - king_v) <= 1 and abs(next_turn_g - king_g) <= 1 ):
#             print("y")
#         else: 
#             print("no!")
        
#     else: print("no")


#     cheas(king_v, king_g, next_turn_v, next_turn_g)

# 16.Треугольник существует только тогда, когда сумма любых двух его сторон больше третьей. Дано a, b, c - стороны предполагаемого треугольника. 
# Требуется сравнить длину каждого отрезка-стороны с суммой двух других. 
# Если хотя бы в одном случае отрезок окажется больше суммы двух других, то треугольника с такими сторонами не существует.

#if a + b > c and a + c > b and b + c > a: